
package com.onlinevotingsystem;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Zenawi Zemene
 */
public class Voters extends javax.swing.JFrame {
    Connection conn = null;
    PreparedStatement statement = null;
    String sql;

    public Voters() {
        super("Voters' Information");
        initComponents();
        showVotesInformation();
    }
    private void showVotesInformation(){
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            conn = ConnectionDB.getConnection();

            sql = "SELECT voter_id,Name,DOB,Email,Gender, Phone_Number, Address,Approved FROM VotersTable";
            statement = conn.prepareStatement(sql);
            ResultSet rs = statement.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tblVoters.getModel();
            while (rs.next()) {
                Object[] row = {
                    rs.getInt("voter_id"),
                    rs.getString("Name"),
                    rs.getString("DOB"),
                    rs.getString("Email"),
                    rs.getString("Gender"),
                    rs.getString("Phone_Number"),
                    rs.getString("Address"),
                    rs.getInt("approved")
                };
                model.addRow(row);
            }    
            conn.close();
            }catch(ClassNotFoundException e){
                System.out.println(e.getMessage());
            }catch(SQLException e){
                System.out.println(e.getMessage());
            }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnApprove = new javax.swing.JButton();
        btnDeny = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVoters = new javax.swing.JTable();
        btnRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(79, 178, 204));

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/onlinevotingsystem/icons/left-arrow.png"))); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Online Voting System");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Manage Voters");
        jLabel2.setOpaque(true);

        btnApprove.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnApprove.setForeground(new java.awt.Color(0, 153, 51));
        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        btnDeny.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnDeny.setForeground(new java.awt.Color(0, 153, 51));
        btnDeny.setText("Deny");
        btnDeny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDenyActionPerformed(evt);
            }
        });

        tblVoters.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tblVoters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserID", "Name", "DOB", "Email", "Gender", "Phone Number", "Address", "Approved"
            }
        ));
        jScrollPane1.setViewportView(tblVoters);

        btnRemove.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(255, 0, 0));
        btnRemove.setText("Remove Voters");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(31, 31, 31)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 787, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnRemove)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnDeny, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnApprove, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(btnBack)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(btnApprove)
                        .addGap(52, 52, 52)
                        .addComponent(btnDeny)
                        .addGap(34, 34, 34)
                        .addComponent(btnRemove)
                        .addGap(263, 263, 263))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnApprove, btnDeny, btnRemove});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        dispose();
        new AdminHome().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDenyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDenyActionPerformed
        if(tblVoters.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a Voter from the table", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            int selectedRow = tblVoters.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tblVoters.getModel();
            int cid = (int) model.getValueAt(selectedRow, 0);
            try{
                Class.forName("oracle.jdbc.driver.OracleDriver");
                conn = ConnectionDB.getConnection();
                sql = "SELECT voter_id, approved FROM VotersTable WHERE voter_id = ?";
                statement = conn.prepareStatement(sql);
                statement.setInt(1, cid);
                ResultSet rs = statement.executeQuery();
            if (rs.next()) {
                int userId = rs.getInt("voter_id");
                int approved = rs.getInt("approved");
                if (approved == 1) {
                        int answer = JOptionPane.showConfirmDialog(this, "Do you want to deny the voter ?", "message",JOptionPane.YES_NO_OPTION);
                        if(answer == JOptionPane.YES_OPTION){
                            PreparedStatement updateStmt = conn.prepareStatement("UPDATE VotersTable SET approved = ? WHERE voter_id = ?");
                            updateStmt.setInt(1, 0); // deny the user (assuming 0 represents deny)
                            updateStmt.setInt(2, userId);
                            updateStmt.executeUpdate();
                        }else{
                            //do nothing
                        }
                        
                } else {
                    JOptionPane.showMessageDialog(this,"Voter is not Approved yet! Click the approve button to approve","Message",JOptionPane.INFORMATION_MESSAGE);
                }
            }
            conn.close();
            }catch(ClassNotFoundException e){
                System.out.println(e.getMessage());
                e.getStackTrace();
            }catch(SQLException e){
                System.out.println(e.getMessage());
                e.getStackTrace();
            }
        }
    }//GEN-LAST:event_btnDenyActionPerformed

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        if(tblVoters.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a Voter from the table", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            int selectedRow = tblVoters.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tblVoters.getModel();
            int cid = (int) model.getValueAt(selectedRow, 0);
            try{
                Class.forName("oracle.jdbc.driver.OracleDriver");
                conn = ConnectionDB.getConnection();
                sql = "SELECT voter_id, approved FROM VotersTable WHERE voter_id = ?";
                statement = conn.prepareStatement(sql);
                statement.setInt(1, cid);
                ResultSet rs = statement.executeQuery();
            if (rs.next()) {
                int userId = rs.getInt("voter_id");
                int approved = rs.getInt("approved");
                if (approved == 1) {
                        JOptionPane.showMessageDialog(this,"Voter is Approved!","Message",JOptionPane.INFORMATION_MESSAGE);
                } else {
                    PreparedStatement updateStmt = conn.prepareStatement("UPDATE VotersTable SET approved = ? WHERE voter_id = ?");
                    updateStmt.setInt(1, 1); // Approve the user (assuming 1 represents approval)
                    updateStmt.setInt(2, userId);
                    updateStmt.executeUpdate();
                    JOptionPane.showMessageDialog(this,"Voter is not Approved yet! Click the approve button to approve","Message",JOptionPane.INFORMATION_MESSAGE);
                }
            }
            conn.close();
            }catch(ClassNotFoundException e){
                System.out.println(e.getMessage());
                e.getStackTrace();
            }catch(SQLException e){
                System.out.println(e.getMessage());
                e.getStackTrace();
            }
        }
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        if(tblVoters.getSelectedRow() != -1){
            DefaultTableModel model = (DefaultTableModel) tblVoters.getModel();
            int id = (int) model.getValueAt(tblVoters.getSelectedRow(), 0);
            try{
                Class.forName("oracle.jdbc.driver.OracleDriver");
                conn = ConnectionDB.getConnection();
                
                sql = "DELETE FROM VotersTable WHERE voter_id = ?";
                statement = conn.prepareStatement(sql);
                statement.setInt(1, id);
                statement.executeUpdate();
                conn.close();
                
                model.removeRow(tblVoters.getSelectedRow());
//                System.out.println("successfully deleted");
            }catch(ClassNotFoundException e){
                System.out.println(e.getMessage());
            }catch(SQLException e){
                System.out.println(e.getMessage());
            }
        }else{
            JOptionPane.showMessageDialog(this, "Please select a Voter From the table to delete", "Message", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Voters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Voters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Voters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Voters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Voters().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeny;
    private javax.swing.JButton btnRemove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblVoters;
    // End of variables declaration//GEN-END:variables
}
